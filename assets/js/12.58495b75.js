(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{380:function(e,t,o){"use strict";o.r(t);var a=o(46),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"react"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#react"}},[e._v("#")]),e._v(" React")]),e._v(" "),o("h2",{attrs:{id:"v16"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#v16"}},[e._v("#")]),e._v(" v16")]),e._v(" "),o("h3",{attrs:{id:"生命周期"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[e._v("#")]),e._v(" 生命周期")]),e._v(" "),o("ol",[o("li",[o("code",[e._v("static getDerivedStateFromProps(nextProps, prevState)")]),e._v(" 替换 "),o("code",[e._v("componentWillReceiveProps")])]),e._v(" "),o("li",[o("code",[e._v("static getSnapshotBeforeUpdate")]),e._v(" 替换 "),o("code",[e._v("componentWillUpdate")])]),e._v(" "),o("li",[e._v("避免使用 componentWillReceiveProps，因为fiber将组件的更新分为2个阶段：render parse（渲染解析）、commit parse（提交解析）。第一阶段会调用 componentWillMount 、 componentWillReceiveProps 、 componentWillUpdate ；第二阶段会调用 componentDidMount 、 componentDidUpdate 、 componentWillUnmount 。")])]),e._v(" "),o("h3",{attrs:{id:"fiber"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#fiber"}},[e._v("#")]),e._v(" fiber")]),e._v(" "),o("h3",{attrs:{id:"hooks"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#hooks"}},[e._v("#")]),e._v(" hooks")]),e._v(" "),o("p",[e._v("好处：")]),e._v(" "),o("ol",[o("li",[e._v("跨组件复用；")]),e._v(" "),o("li",[e._v("状态与UI隔离；")]),e._v(" "),o("li",[e._v("使状态逻辑更细粒化；")]),e._v(" "),o("li",[e._v("相比类组件较简化\n缺点：")]),e._v(" "),o("li",[e._v("避免在循环、条件判断、嵌套函数内调用hooks")]),e._v(" "),o("li",[e._v("只能在函数定义组件和hooks中调用hooks")]),e._v(" "),o("li",[e._v("不能在useEffect中使用useState")])]),e._v(" "),o("p",[e._v("钩子函数：")]),e._v(" "),o("ol",[o("li",[e._v("useEffect(callback, deps) ，可以实现 componentDidMount 、 didupdate 、willUnmount ，deps不存在则相当于 didUpdate （而且每次render时会调用2次回调，先调用上次保存的回调中返回的函数，再重新调用回调），deps为空数组则相当于 didMount ，回调函数中返回的函数会在 willUnmount 时调用。")]),e._v(" "),o("li",[e._v("useCallback(callback, deps) ， 缓存函数引用，依赖的变量未变则函数引用不变，空数组则会永久缓存。如果函数会变，当函数作为props传给起亚组件时，pureComponent、shouldUpdateComponent 、 React.memo 会失效")]),e._v(" "),o("li",[e._v("useMemo(callback, deps) ， 缓存第一个入参函数执行后返回的值，依赖的变量未变则第一个入参函数不会被调用")]),e._v(" "),o("li",[e._v("useRef")]),e._v(" "),o("li",[e._v("useContext")])])])}),[],!1,null,null,null);t.default=s.exports}}]);