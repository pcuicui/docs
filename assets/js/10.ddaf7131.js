(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{382:function(t,s,a){"use strict";a.r(s);var e=a(46),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"git"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[t._v("#")]),t._v(" GIT")]),t._v(" "),a("h2",{attrs:{id:"撤销代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#撤销代码"}},[t._v("#")]),t._v(" 撤销代码")]),t._v(" "),a("h3",{attrs:{id:"git-reset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-reset"}},[t._v("#")]),t._v(" git reset")]),t._v(" "),a("p",[t._v("撤销未push的代码，在提交层面将一个分支的末端指向另一个指向，用来移除当前分支的一些提交")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 让当前分支后退2个提交")]),t._v("\ngit reset "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HEAD")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n")])])]),a("p",[t._v("用来修改缓存区或工作目录的标记：")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("--soft")]),t._v(" 缓存区和工作区目录不会被改变")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("--hard")]),t._v(" 缓存区和工作区目录都会同步到指定的提交")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("--mixed")]),t._v(" 默认，缓存区会同步到指定提交，但工作目录不受影响")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将当前的改动从缓存区中移除，但工作目录中还暴露")]),t._v("\ngit reset "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("mixed "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HEAD")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 完全舍弃未提交的改动")]),t._v("\ngit reset "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("hard "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HEAD")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 回到某个commit，同时修改本地工作目录")]),t._v("\ngit reset "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("commit id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("hard\n")])])])])]),t._v(" "),a("p",[t._v("reset执行后，需要重新commit、push 才能覆盖远程，但是push时会提示当期版本低于远程（别git pull啊），可以加上--force强推。")]),t._v(" "),a("h3",{attrs:{id:"git-revert"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-revert"}},[t._v("#")]),t._v(" git revert")]),t._v(" "),a("p",[t._v("撤销已经push的代码，撤销同时创建新的提交，会保留之前已经提交的代码记录")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// revert后跟的是具体那个已经合并的分支名，所以commit id号对应的是分支")]),t._v("\ngit revert "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("commit id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("h3",{attrs:{id:"git-rebase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-rebase"}},[t._v("#")]),t._v(" git rebase")]),t._v(" "),a("p",[t._v("合并多个commit")]),t._v(" "),a("h2",{attrs:{id:"push了但是"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#push了但是"}},[t._v("#")]),t._v(" push了但是")])])}),[],!1,null,null,null);s.default=r.exports}}]);